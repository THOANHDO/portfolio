'use client';

import { motion, useInView } from 'framer-motion';
import { useEffect, useMemo, useRef } from 'react';
import Lenis from 'lenis';
import { ArrowUpRight, Download, Mail, Sparkles } from 'lucide-react';

const fadeUp = {
  hidden: { opacity: 0, y: 32 },
  visible: (delay = 0) => ({
    opacity: 1,
    y: 0,
    transition: { duration: 0.8, ease: [0.25, 0.1, 0.25, 1], delay }
  })
};

const sectionReveal = {
  hidden: { opacity: 0, y: 40 },
  visible: {
    opacity: 1,
    y: 0,
    transition: { duration: 0.8, ease: [0.16, 1, 0.3, 1] }
  }
};

const badges = [
  'IT Comtor',
  'JP-VN-EN Translator',
  'Agile Facilitator',
  'Bilingual Documentation'
];

const skillGroups = [
  {
    title: 'Language Mastery',
    description: 'Nu√¥i d∆∞·ª°ng s·ª± ƒë·ªìng c·∫£m gi·ªØa c√°c n·ªÅn vƒÉn ho√° ƒë·ªÉ gi·ªØ tinh th·∫ßn d·ª± √°n',
    items: [
      { label: 'Japanese', detail: 'JLPT N1„Éª„Éì„Ç∏„Éç„Çπ„Éç„Ç§„ÉÜ„Ç£„Éñ' },
      { label: 'English', detail: 'TOEIC 915„ÉªBusiness Communication' },
      { label: 'Vietnamese', detail: 'Native„ÉªK·ªπ nƒÉng vi·∫øt chuy√™n ng√†nh IT' }
    ]
  },
  {
    title: 'IT Knowledge',
    description: 'Ch·ªß ƒë·ªông ƒë·ªÅ xu·∫•t gi·∫£i ph√°p v√† ƒë·∫∑t c√¢u h·ªèi k·ªπ thu·∫≠t chu·∫©n x√°c',
    items: [
      { label: 'SDLC & Agile/Scrum', detail: 'User stories, backlog refinement, sprint review' },
      { label: 'System Design', detail: 'API specs, AWS cloud basics, database schema' },
      { label: 'Documentation', detail: 'SRS, ADR, release note, meeting minutes song ng·ªØ' }
    ]
  },
  {
    title: 'Tools',
    description: 'T·ªëi ∆∞u ho√° lu·ªìng giao ti·∫øp ƒëa chi·ªÅu gi·ªØa c√°c team',
    items: [
      { label: 'Jira / Confluence', detail: 'Workflow automation & knowledge base' },
      { label: 'Figma / Miro', detail: 'UI handoff, journey mapping, workshop facilitation' },
      { label: 'Postman / VSCode / GitHub', detail: 'API testing, code review h·ªó tr·ª£ dev' }
    ]
  }
];

const projects = [
  {
    company: 'Pasona Tech Vietnam',
    role: 'IT Comtor / BA Translator',
    description:
      'Phi√™n d·ªãch workshop kick-off, chuy·ªÉn h√≥a requirement th√†nh backlog, h·ªó tr·ª£ BA vi·∫øt SRS v√† user manual song ng·ªØ.',
    tags: ['#Translation', '#BA', '#Documentation', '#Agile']
  },
  {
    company: 'Fintech Platform (NDA)',
    role: 'Communication Bridge',
    description:
      'ƒê·∫£m b·∫£o align gi·ªØa team JP product owner v√† VN dev: note meeting, d·ªãch t√†i li·ªáu API, ƒëi·ªÅu ph·ªëi test cycles.',
    tags: ['#Fintech', '#API', '#QA', '#Scrum']
  },
  {
    company: 'E-commerce SaaS Expansion',
    role: 'Localization Lead',
    description:
      'Thi·∫øt k·∫ø quy tr√¨nh d·ªãch thu·∫≠t chu·∫©n SEO, qu·∫£n l√Ω term base, training team CS v·ªÅ tone of voice ƒëa ng√¥n ng·ªØ.',
    tags: ['#Localization', '#SEO', '#Training', '#CX']
  }
];

const translationSamples = [
  {
    title: 'Software Development Contract',
    pair: 'JP ‚Üí VN',
    summary: 'ƒêi·ªÅu kho·∫£n d·ª± √°n offshore, timeline & SLA song ng·ªØ.',
    link: '#'
  },
  {
    title: 'API Documentation',
    pair: 'EN ‚áÑ JP',
    summary: 'T√†i li·ªáu RESTful API, auth flow, v√≠ d·ª• request-response.',
    link: '#'
  },
  {
    title: 'Sprint Review Minutes',
    pair: 'JP ‚áÑ VN',
    summary: 'Bi√™n b·∫£n h·ªçp sprint v·ªõi highlight action items v√† risk log.',
    link: '#'
  }
];

const testimonials = [
  {
    quote:
      'Ngoc n·∫Øm b·∫Øt k·ªπ thu·∫≠t r·∫•t nhanh, lu√¥n chu·∫©n b·ªã glossary gi√∫p dev v√† kh√°ch h√†ng hi·ªÉu nhau ch·ªâ trong m·ªôt l·∫ßn h·ªçp.',
    name: 'Tran Minh Hoang',
    role: 'Project Manager, Pasona Tech'
  },
  {
    quote:
      'Her bilingual documentation dramatically reduced review cycles. She anticipates questions before they surface.',
    name: 'Sato Emi',
    role: 'Product Owner, Tokyo'
  }
];

function useSectionInView<T extends HTMLElement>() {
  const ref = useRef<T>(null);
  const isInView = useInView(ref, { once: true, margin: '-100px' });
  return { ref, isInView };
}

export default function HomePage() {
  useEffect(() => {
    const lenis = new Lenis({
      duration: 1.2,
      smoothWheel: true,
      smoothTouch: false
    });

    const raf = (time: number) => {
      lenis.raf(time);
      requestAnimationFrame(raf);
    };
    requestAnimationFrame(raf);

    return () => {
      lenis.destroy();
    };
  }, []);

  const heroFloating = useMemo(
    () => ({
      initial: { y: 0 },
      animate: {
        y: [-6, 6, -6],
        rotate: [-2, 2, -2],
        transition: { duration: 6, repeat: Infinity, ease: 'easeInOut' }
      }
    }),
    []
  );

  const { ref: aboutRef, isInView: aboutInView } = useSectionInView<HTMLDivElement>();
  const { ref: skillsRef, isInView: skillsInView } = useSectionInView<HTMLDivElement>();
  const { ref: workflowRef, isInView: workflowInView } = useSectionInView<HTMLDivElement>();
  const { ref: projectsRef, isInView: projectsInView } = useSectionInView<HTMLDivElement>();
  const { ref: translationRef, isInView: translationInView } = useSectionInView<HTMLDivElement>();
  const { ref: testimonialsRef, isInView: testimonialsInView } = useSectionInView<HTMLDivElement>();
  const { ref: contactRef, isInView: contactInView } = useSectionInView<HTMLDivElement>();

  return (
    <main className="relative overflow-hidden">
      <div className="pointer-events-none fixed inset-0 -z-10 opacity-70 [mask-image:radial-gradient(circle_at_center,white,transparent_70%)]">
        <div className="absolute inset-0 bg-[radial-gradient(circle_at_10%_10%,rgba(255,199,95,0.15),transparent_60%),radial-gradient(circle_at_80%_20%,rgba(255,133,179,0.2),transparent_60%),radial-gradient(circle_at_50%_80%,rgba(124,244,198,0.18),transparent_60%)]" />
      </div>

      <section className="relative mx-auto flex min-h-screen max-w-6xl flex-col items-center justify-center gap-12 px-6 pt-24 text-center md:text-left md:pt-32">
        <motion.div initial="hidden" animate="visible" variants={fadeUp} className="flex flex-col items-center gap-6 md:flex-row md:items-start">
          <motion.div
            {...heroFloating}
            className="gradient-border rounded-3xl bg-midnight/50 p-6 backdrop-blur"
          >
            <motion.div
              className="flex h-28 w-28 items-center justify-center rounded-2xl bg-azure/40 text-4xl font-semibold text-white shadow-[0_12px_40px_rgba(94,155,255,0.3)]"
              animate={{
                boxShadow: [
                  '0 12px 30px rgba(94,155,255,0.3)',
                  '0 12px 30px rgba(255,133,179,0.45)',
                  '0 12px 30px rgba(124,244,198,0.35)'
                ],
                transition: { repeat: Infinity, duration: 6 }
              }}
            >
              üå∏
            </motion.div>
          </motion.div>

          <div className="flex max-w-2xl flex-col items-center gap-6 md:items-start">
            <motion.span
              className="inline-flex items-center gap-2 rounded-full bg-white/10 px-4 py-2 text-sm font-medium text-sunshine shadow-[0_10px_30px_rgba(255,199,95,0.2)] backdrop-blur"
              initial={{ opacity: 0, y: -12 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ delay: 0.2, duration: 0.8 }}
            >
              <Sparkles className="h-4 w-4" /> Hello! Xin ch√†o ‚Ä¢ „Åì„Çì„Å´„Å°„ÅØ
            </motion.span>
            <motion.h1
              className="text-4xl font-bold leading-tight text-white md:text-6xl"
              initial="hidden"
              animate="visible"
              custom={0.1}
              variants={fadeUp}
            >
              Bridging Language & Technology
            </motion.h1>
            <motion.p className="text-lg text-slate-200/90 md:text-xl" variants={fadeUp} initial="hidden" animate="visible" custom={0.2}>
              IT Comtor & Translator (JP‚ÄìVN‚ÄìEN) specialized in system development communication, bilingual documentation, and
              agile product delivery.
            </motion.p>
            <motion.div className="flex flex-wrap items-center justify-center gap-3 md:justify-start" variants={fadeUp} initial="hidden" animate="visible" custom={0.3}>
              {badges.map((badge) => (
                <motion.span
                  key={badge}
                  className="rounded-full border border-white/10 bg-white/5 px-4 py-1.5 text-sm text-slate-100 shadow-[0_8px_20px_rgba(124,244,198,0.2)]"
                  whileHover={{ scale: 1.05, backgroundColor: 'rgba(124,244,198,0.2)' }}
                  transition={{ type: 'spring', stiffness: 260, damping: 20 }}
                >
                  {badge}
                </motion.span>
              ))}
            </motion.div>
            <motion.div className="flex flex-wrap items-center justify-center gap-4 md:justify-start" variants={fadeUp} initial="hidden" animate="visible" custom={0.4}>
              <a
                href="#projects"
                className="inline-flex items-center gap-2 rounded-full bg-azure px-6 py-3 text-base font-semibold text-white shadow-[0_15px_40px_rgba(94,155,255,0.4)] transition hover:-translate-y-1 hover:bg-azure/90"
              >
                View My Projects <ArrowUpRight className="h-4 w-4" />
              </a>
              <a
                href="#contact"
                className="inline-flex items-center gap-2 rounded-full border border-white/20 bg-white/10 px-6 py-3 text-base font-semibold text-white backdrop-blur transition hover:-translate-y-1 hover:border-sakura hover:text-sakura"
              >
                Book an Intro Call <Download className="h-4 w-4" />
              </a>
            </motion.div>
          </div>
        </motion.div>
      </section>

      <section id="about" ref={aboutRef} className="mx-auto max-w-5xl px-6 py-24">
        <motion.div className="space-y-10" initial="hidden" animate={aboutInView ? 'visible' : 'hidden'} variants={sectionReveal}>
          <div className="flex flex-col gap-4">
            <h2 className="section-heading">Xin ch√†o, t√¥i l√† Ng·ªçc ‚Äî IT Comtor t·∫°i Pasona Group</h2>
            <p className="section-subheading">
              T√¥i l√† IT Comtor t·∫°i Pasona Group, chuy√™n h·ªó tr·ª£ phi√™n d·ªãch v√† ƒëi·ªÅu ph·ªëi y√™u c·∫ßu k·ªπ thu·∫≠t gi·ªØa team Nh·∫≠t ‚Äì Vi·ªát. T√¥i
              y√™u th√≠ch vi·ªác k·∫øt n·ªëi con ng∆∞·ªùi b·∫±ng ng√¥n ng·ªØ v√† c√¥ng ngh·ªá ƒë·ªÉ t·∫°o ra s·∫£n ph·∫©m h·ªØu √≠ch.
            </p>
          </div>
          <div className="grid gap-8 md:grid-cols-2">
            <div className="rounded-3xl border border-white/10 bg-white/5 p-8 shadow-[0_30px_60px_rgba(94,155,255,0.15)] backdrop-blur">
              <h3 className="text-xl font-semibold text-sunshine">„Éó„É≠„Éï„Ç£„Éº„É´ (JP)</h3>
              <p className="mt-4 text-slate-200/90">
                „Éë„ÇΩ„Éä„ÉÜ„ÉÉ„ÇØ„Éô„Éà„Éä„É†„ÅÆIT„Ç≥„Éü„É•„Éã„Ç±„Éº„Çø„Éº„ÄÇË¶Å‰ª∂ÂÆöÁæ©„Åã„Çâ„ÉÜ„Çπ„Éà„Çµ„Éù„Éº„Éà„Åæ„Åß„ÄÅÊó•Ë∂äÈñì„ÅÆÊäÄË°ìÁöÑ„Å™Ê©ãÊ∏°„Åó„ÇíÊãÖÂΩì„ÄÇ„Éó„É≠„Ç∏„Çß„ÇØ„Éà„ÅÆÊ∏©Â∫¶ÊÑü„Çí‰øù„Å§„Åü„ÇÅ„Å´„ÄÅËÉåÊôØÁêÜËß£„Å®„É™„Çπ„ÇØÂÖ±Êúâ„ÇíÂ§ßÂàá„Å´„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇ
              </p>
              <ul className="mt-6 space-y-3 text-sm text-slate-200/80">
                <li>‚Ä¢ Êã†ÁÇπ: Ho Chi Minh City ‚Äî Tokyo remote collaboration</li>
                <li>‚Ä¢ Âº∑„Åø: Technical translation, meeting facilitation, cross-cultural coaching</li>
                <li>‚Ä¢ Ë∂£Âë≥: „Ç´„Éï„ÇßÂ∑°„Çä„ÄÅUX„É™„Çµ„Éº„ÉÅ„ÄÅJapanese podcasts</li>
              </ul>
            </div>
            <div className="rounded-3xl border border-white/10 bg-white/5 p-8 shadow-[0_30px_60px_rgba(255,133,179,0.18)] backdrop-blur">
              <h3 className="text-xl font-semibold text-mint">Career Timeline</h3>
              <div className="mt-6 space-y-6">
                <div className="flex items-start gap-4">
                  <span className="mt-1 h-10 w-10 rounded-full bg-azure/30 text-center text-sm font-semibold leading-10 text-white">2024</span>
                  <p className="text-sm text-slate-200/80">
                    Lead IT Comtor cho d·ª± √°n SaaS m·ªü r·ªông sang th·ªã tr∆∞·ªùng Nh·∫≠t, x√¢y d·ª±ng playbook communication chu·∫©n Agile.
                  </p>
                </div>
                <div className="flex items-start gap-4">
                  <span className="mt-1 h-10 w-10 rounded-full bg-sakura/30 text-center text-sm font-semibold leading-10 text-white">2022</span>
                  <p className="text-sm text-slate-200/80">
                    Gia nh·∫≠p Pasona Group ‚Ä¢ H·ªó tr·ª£ 12+ d·ª± √°n system development, ph√°t tri·ªÉn k·ªπ nƒÉng BA & translation chuy√™n s√¢u.
                  </p>
                </div>
                <div className="flex items-start gap-4">
                  <span className="mt-1 h-10 w-10 rounded-full bg-sunshine/30 text-center text-sm font-semibold leading-10 text-white">2019</span>
                  <p className="text-sm text-slate-200/80">
                    B·∫Øt ƒë·∫ßu s·ª± nghi·ªáp phi√™n d·ªãch c√¥ng ngh·ªá ‚Ä¢ ƒê·ªìng h√†nh c√πng team Nh·∫≠t ƒë√†o t·∫°o k·ªπ nƒÉng giao ti·∫øp cho dev Vi·ªát.
                  </p>
                </div>
              </div>
            </div>
          </div>
        </motion.div>
      </section>

      <section id="skills" ref={skillsRef} className="mx-auto max-w-6xl px-6 py-24">
        <motion.div
          className="rounded-[32px] border border-white/10 bg-gradient-to-br from-white/10 via-white/5 to-transparent p-10 backdrop-blur-xl"
          initial="hidden"
          animate={skillsInView ? 'visible' : 'hidden'}
          variants={sectionReveal}
        >
          <div className="flex flex-col gap-4 text-center md:text-left">
            <h2 className="section-heading">Skills & Tools</h2>
            <p className="section-subheading">
              B·∫£n ƒë·ªì nƒÉng l·ª±c gi√∫p t√¥i gi·ªØ nh·ªãp ƒë·ªô trao ƒë·ªïi r√µ r√†ng, ƒë·ªìng nh·∫•t gi·ªØa stakeholder v√† ƒë·ªôi ng≈© ph√°t tri·ªÉn.
            </p>
          </div>
          <div className="mt-10 grid gap-6 md:grid-cols-3">
            {skillGroups.map((group, index) => (
              <motion.div
                key={group.title}
                className="gradient-border h-full rounded-3xl bg-midnight/40 p-6 text-left shadow-[0_20px_50px_rgba(14,25,49,0.45)]"
                whileHover={{ translateY: -10 }}
                transition={{ type: 'spring', stiffness: 260, damping: 26 }}
                custom={index * 0.1}
              >
                <motion.h3 className="text-xl font-semibold text-white" initial={{ opacity: 0, y: 10 }} animate={{ opacity: 1, y: 0 }} transition={{ delay: 0.2 + index * 0.1 }}>
                  {group.title}
                </motion.h3>
                <p className="mt-3 text-sm text-slate-200/80">{group.description}</p>
                <ul className="mt-6 space-y-3 text-sm text-slate-100/90">
                  {group.items.map((item) => (
                    <li key={item.label} className="flex flex-col rounded-2xl border border-white/10 bg-white/5 px-4 py-3">
                      <span className="font-medium text-sunshine">{item.label}</span>
                      <span className="text-xs text-slate-200/80">{item.detail}</span>
                    </li>
                  ))}
                </ul>
              </motion.div>
            ))}
          </div>
        </motion.div>
      </section>

      <section id="workflow" ref={workflowRef} className="mx-auto max-w-6xl px-6 py-24">
        <motion.div
          className="rounded-[36px] border border-white/10 bg-[#121b35]/70 p-10 backdrop-blur-xl"
          initial="hidden"
          animate={workflowInView ? 'visible' : 'hidden'}
          variants={sectionReveal}
        >
          <div className="flex flex-col gap-4 text-center md:text-left">
            <h2 className="section-heading">Workflow & Communication Style</h2>
            <p className="section-subheading">
              T√¥i l√† c·∫ßu n·ªëi gi√∫p lu·ªìng th√¥ng tin Client ‚Üí BA/PM ‚Üí IT Comtor ‚Üí Dev Team di·ªÖn ra tr√¥i ch·∫£y, minh b·∫°ch.
            </p>
          </div>
          <div className="mt-12 grid gap-8 md:grid-cols-[1.5fr_1fr]">
            <div className="relative overflow-hidden rounded-3xl bg-gradient-to-br from-azure/10 via-white/5 to-sakura/10 p-8">
              <motion.div
                className="absolute inset-0 opacity-60"
                initial={{ opacity: 0 }}
                animate={{ opacity: 0.6 }}
                transition={{ duration: 1.2, delay: 0.4 }}
              >
                <div className="h-full w-full bg-[radial-gradient(circle_at_center,rgba(124,244,198,0.25),transparent_60%)]" />
              </motion.div>
              <div className="relative space-y-6">
                {['Client', 'BA/PM', 'IT Comtor', 'Dev Team'].map((stage, idx) => (
                  <motion.div
                    key={stage}
                    className="flex items-center justify-between rounded-2xl bg-white/10 px-5 py-4 text-left shadow-[0_15px_35px_rgba(18,27,53,0.35)]"
                    initial={{ opacity: 0, x: -20 }}
                    animate={workflowInView ? { opacity: 1, x: 0 } : {}}
                    transition={{ delay: 0.2 + idx * 0.15, duration: 0.6 }}
                  >
                    <span className="text-lg font-semibold text-white">{stage}</span>
                    <motion.span
                      className="rounded-full bg-mint/30 px-3 py-1 text-xs font-medium text-midnight"
                      animate={{ scale: [1, 1.08, 1], transition: { repeat: Infinity, duration: 2.8, delay: idx * 0.2 } }}
                    >
                      {idx === 2 ? 'Bridge' : 'Sync'}
                    </motion.span>
                  </motion.div>
                ))}
              </div>
            </div>
            <div className="space-y-4">
              <h3 className="text-xl font-semibold text-white">Communication Highlights</h3>
              <ul className="space-y-3 text-sm text-slate-200/80">
                <li>‚Ä¢ Live simultaneous translation for requirement & sprint planning meetings.</li>
                <li>‚Ä¢ Visual collaboration v·ªõi Miro + FigJam gi√∫p align persona & user flow.</li>
                <li>‚Ä¢ Risk radar v√† recap mail song ng·ªØ, ƒë·∫£m b·∫£o stakeholder lu√¥n n·∫Øm r√µ.</li>
                <li>‚Ä¢ Coaching team dev v·ªÅ nuance ti·∫øng Nh·∫≠t, gi·∫£m 35% v√≤ng l·∫∑p feedback.</li>
              </ul>
            </div>
          </div>
        </motion.div>
      </section>

      <section id="projects" ref={projectsRef} className="mx-auto max-w-6xl px-6 py-24">
        <motion.div initial="hidden" animate={projectsInView ? 'visible' : 'hidden'} variants={sectionReveal} className="space-y-12">
          <div className="flex flex-col gap-4 text-center md:text-left">
            <h2 className="section-heading">Projects & Case Studies</h2>
            <p className="section-subheading">
              M·ªôt v√†i d·ª± √°n ti√™u bi·ªÉu th·ªÉ hi·ªán kh·∫£ nƒÉng k·∫øt n·ªëi ƒëa ng√¥n ng·ªØ, qu·∫£n l√Ω t√†i li·ªáu v√† h·ªó tr·ª£ quy tr√¨nh Agile.
            </p>
          </div>
          <div className="grid gap-6 md:grid-cols-3">
            {projects.map((project, idx) => (
              <motion.div
                key={project.company}
                className="group relative overflow-hidden rounded-3xl border border-white/10 bg-[#121c39]/80 p-8 shadow-[0_25px_60px_rgba(10,15,28,0.55)] backdrop-blur"
                whileHover={{ y: -12 }}
                transition={{ type: 'spring', stiffness: 260, damping: 24 }}
              >
                <motion.span
                  className="text-sm font-semibold uppercase tracking-wide text-sunshine"
                  initial={{ opacity: 0, y: -12 }}
                  animate={{ opacity: 1, y: 0 }}
                  transition={{ delay: 0.2 + idx * 0.1, duration: 0.6 }}
                >
                  {project.company}
                </motion.span>
                <h3 className="mt-3 text-xl font-semibold text-white">{project.role}</h3>
                <p className="mt-4 text-sm text-slate-200/80">{project.description}</p>
                <div className="mt-6 flex flex-wrap gap-2">
                  {project.tags.map((tag) => (
                    <span key={tag} className="rounded-full bg-white/10 px-3 py-1 text-xs text-slate-100">
                      {tag}
                    </span>
                  ))}
                </div>
                <motion.div
                  className="pointer-events-none absolute inset-0 opacity-0 transition-opacity duration-500 group-hover:opacity-100"
                  initial={{ opacity: 0 }}
                  whileHover={{ opacity: 1 }}
                >
                  <div className="absolute inset-0 bg-[radial-gradient(circle_at_top,rgba(255,133,179,0.3),transparent_60%)]" />
                </motion.div>
              </motion.div>
            ))}
          </div>
        </motion.div>
      </section>

      <section id="portfolio" ref={translationRef} className="mx-auto max-w-6xl px-6 py-24">
        <motion.div initial="hidden" animate={translationInView ? 'visible' : 'hidden'} variants={sectionReveal} className="rounded-[36px] border border-white/10 bg-gradient-to-br from-[#1d294a]/80 via-[#16213b]/80 to-[#101830]/80 p-10 backdrop-blur-xl">
          <div className="flex flex-col gap-4 text-center md:text-left">
            <h2 className="section-heading">Translation Portfolio</h2>
            <p className="section-subheading">
              Ch·∫Øt l·ªçc nh·ªØng s·∫£n ph·∫©m ng√¥n ng·ªØ ti√™u bi·ªÉu ch·ª©ng minh kh·∫£ nƒÉng truy·ªÅn t·∫£i th√¥ng tin ch√≠nh x√°c v√† t·ªëi ∆∞u SEO.
            </p>
          </div>
          <div className="mt-10 grid gap-8 md:grid-cols-3">
            {translationSamples.map((sample) => (
              <motion.a
                key={sample.title}
                href={sample.link}
                className="group flex h-full flex-col justify-between rounded-3xl border border-white/10 bg-white/5 p-6 text-left shadow-[0_30px_50px_rgba(29,41,74,0.5)] backdrop-blur"
                whileHover={{ scale: 1.03, rotate: -0.5 }}
                transition={{ type: 'spring', stiffness: 260, damping: 20 }}
              >
                <div className="space-y-3">
                  <span className="rounded-full bg-mint/30 px-3 py-1 text-xs font-semibold text-midnight">{sample.pair}</span>
                  <h3 className="text-lg font-semibold text-white">{sample.title}</h3>
                  <p className="text-sm text-slate-200/80">{sample.summary}</p>
                </div>
                <motion.span className="mt-6 inline-flex items-center gap-2 text-sm font-medium text-sunshine" whileHover={{ x: 4 }}>
                  View sample <ArrowUpRight className="h-4 w-4" />
                </motion.span>
              </motion.a>
            ))}
          </div>
        </motion.div>
      </section>

      <section id="testimonials" ref={testimonialsRef} className="mx-auto max-w-6xl px-6 py-24">
        <motion.div initial="hidden" animate={testimonialsInView ? 'visible' : 'hidden'} variants={sectionReveal} className="space-y-10">
          <div className="flex flex-col gap-4 text-center md:text-left">
            <h2 className="section-heading">Testimonials</h2>
            <p className="section-subheading">Nh·ªØng l·ªùi nh·∫≠n x√©t t·ª´ PM, BrSE v√† kh√°ch h√†ng Nh·∫≠t m√† t√¥i t·ª´ng h·ª£p t√°c.</p>
          </div>
          <div className="grid gap-6 md:grid-cols-2">
            {testimonials.map((testimonial, idx) => (
              <motion.div
                key={testimonial.name}
                className="rounded-3xl border border-white/10 bg-white/5 p-8 shadow-[0_20px_40px_rgba(94,155,255,0.18)] backdrop-blur"
                initial={{ opacity: 0, y: 20 }}
                animate={testimonialsInView ? { opacity: 1, y: 0 } : {}}
                transition={{ delay: 0.2 + idx * 0.15, duration: 0.6 }}
              >
                <p className="text-base text-slate-100/90">‚Äú{testimonial.quote}‚Äù</p>
                <div className="mt-6 text-sm text-slate-200/70">
                  <p className="font-semibold text-white">{testimonial.name}</p>
                  <p>{testimonial.role}</p>
                </div>
              </motion.div>
            ))}
          </div>
        </motion.div>
      </section>

      <section id="contact" ref={contactRef} className="mx-auto max-w-5xl px-6 pb-32">
        <motion.div
          initial="hidden"
          animate={contactInView ? 'visible' : 'hidden'}
          variants={sectionReveal}
          className="relative overflow-hidden rounded-[40px] border border-white/10 bg-gradient-to-r from-azure/20 via-sakura/20 to-mint/20 p-10 backdrop-blur-xl"
        >
          <motion.div
            className="absolute right-[-50px] top-[-50px] h-60 w-60 rounded-full bg-white/10"
            animate={{ scale: [1, 1.05, 1], rotate: [0, 8, 0], transition: { repeat: Infinity, duration: 8 } }}
          />
          <div className="relative z-10 grid gap-10 md:grid-cols-[1.3fr_1fr]">
            <div className="space-y-4">
              <h2 className="text-3xl font-semibold text-white">Let‚Äôs co-create global-ready products</h2>
              <p className="text-sm text-slate-200/80">
                Available for freelance or full-time cooperation. T√¥i ∆∞u ti√™n c√°c d·ª± √°n ƒë·ªÅ cao tr·∫£i nghi·ªám ng∆∞·ªùi d√πng, c·∫ßn c·∫ßu n·ªëi ng√¥n ng·ªØ v√† ki·∫øn th·ª©c k·ªπ thu·∫≠t ch·∫Øc ch·∫Øn.
              </p>
              <div className="flex flex-wrap gap-3 text-sm text-slate-200/80">
                <a href="mailto:hello@itcomtor.jp" className="inline-flex items-center gap-2 rounded-full bg-white/10 px-4 py-2 text-white">
                  <Mail className="h-4 w-4" /> hello@itcomtor.jp
                </a>
                <a href="https://www.linkedin.com" className="inline-flex items-center gap-2 rounded-full bg-white/10 px-4 py-2 text-white">
                  <ArrowUpRight className="h-4 w-4" /> LinkedIn QR
                </a>
              </div>
            </div>
            <form className="space-y-4 rounded-3xl bg-white/10 p-6 shadow-[0_20px_40px_rgba(12,23,46,0.5)]">
              <div className="grid gap-3 md:grid-cols-2">
                <label className="space-y-1 text-sm text-slate-200/80">
                  Name
                  <input type="text" placeholder="Your name" className="w-full rounded-xl border border-white/20 bg-white/10 px-3 py-2 text-white placeholder:text-slate-400 focus:border-mint focus:outline-none" />
                </label>
                <label className="space-y-1 text-sm text-slate-200/80">
                  Email
                  <input type="email" placeholder="you@email.com" className="w-full rounded-xl border border-white/20 bg-white/10 px-3 py-2 text-white placeholder:text-slate-400 focus:border-azure focus:outline-none" />
                </label>
              </div>
              <label className="space-y-1 text-sm text-slate-200/80">
                Project Details
                <textarea rows={4} placeholder="Tell me about your project" className="w-full rounded-xl border border-white/20 bg-white/10 px-3 py-2 text-white placeholder:text-slate-400 focus:border-sakura focus:outline-none" />
              </label>
              <motion.button
                type="submit"
                className="flex w-full items-center justify-center gap-2 rounded-full bg-sunshine px-5 py-3 text-sm font-semibold text-midnight shadow-[0_15px_40px_rgba(255,199,95,0.4)]"
                whileTap={{ scale: 0.97 }}
                whileHover={{ scale: 1.02 }}
              >
                Send Message <ArrowUpRight className="h-4 w-4" />
              </motion.button>
              <p className="text-center text-xs text-slate-300/70">I respond within 24 hours ‚Ä¢ Vercel Analytics enabled</p>
            </form>
          </div>
        </motion.div>
      </section>
    </main>
  );
}
